{"ast":null,"code":"var _jsxFileName = \"/Users/ayush/Adev/soundscapes/frontend/src/components/MusicPlayerCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { FaPlay, FaPause } from 'react-icons/fa';\nimport FastAverageColor from 'fast-average-color'; // Updated import\nimport './MusicPlayerCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayerCard = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [bgColor, setBgColor] = useState('#f0f0f5'); // Default background color\n  const audioRef = useRef(null);\n  const imgRef = useRef(null); // Reference to image\n\n  const togglePlayPause = () => {\n    const audio = audioRef.current;\n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const handleTimeUpdate = () => {\n    const audio = audioRef.current;\n    const progress = audio.currentTime / audio.duration * 100;\n    setProgress(progress);\n  };\n  useEffect(() => {\n    const fac = new FastAverageColor();\n    fac.getColorAsync(imgRef.current).then(color => {\n      setBgColor(color.hex); // Set background color based on image\n    }).catch(e => {\n      console.log(e);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music-card\",\n    style: {\n      backgroundColor: bgColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"album-art\",\n      ref: imgRef,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"path_to_clip_art_image.webp\" // Path to your image\n        ,\n        alt: \"clip art\",\n        style: {\n          display: 'none'\n        } // Hide actual image since we are using it for background color extraction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-container\",\n      children: /*#__PURE__*/_jsxDEV(\"progress\", {\n        value: progress,\n        max: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-pause-button\",\n      onClick: togglePlayPause,\n      children: isPlaying ? /*#__PURE__*/_jsxDEV(FaPause, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3\",\n      onTimeUpdate: handleTimeUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicPlayerCard, \"J2YUXtxTbMRrHcJhbLVh4lWF4Ao=\");\n_c = MusicPlayerCard;\nexport default MusicPlayerCard;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayerCard\");","map":{"version":3,"names":["React","useState","useRef","useEffect","FaPlay","FaPause","FastAverageColor","jsxDEV","_jsxDEV","MusicPlayerCard","_s","isPlaying","setIsPlaying","progress","setProgress","bgColor","setBgColor","audioRef","imgRef","togglePlayPause","audio","current","pause","play","handleTimeUpdate","currentTime","duration","fac","getColorAsync","then","color","hex","catch","e","console","log","className","style","backgroundColor","children","ref","src","alt","display","fileName","_jsxFileName","lineNumber","columnNumber","value","max","onClick","onTimeUpdate","_c","$RefreshReg$"],"sources":["/Users/ayush/Adev/soundscapes/frontend/src/components/MusicPlayerCard.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { FaPlay, FaPause } from 'react-icons/fa';\nimport FastAverageColor from 'fast-average-color';  // Updated import\nimport './MusicPlayerCard.css';\n\nconst MusicPlayerCard = () => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [bgColor, setBgColor] = useState('#f0f0f5'); // Default background color\n  const audioRef = useRef(null);\n  const imgRef = useRef(null);  // Reference to image\n\n  const togglePlayPause = () => {\n    const audio = audioRef.current;\n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  const handleTimeUpdate = () => {\n    const audio = audioRef.current;\n    const progress = (audio.currentTime / audio.duration) * 100;\n    setProgress(progress);\n  };\n\n  useEffect(() => {\n    const fac = new FastAverageColor();\n    fac.getColorAsync(imgRef.current)\n      .then(color => {\n        setBgColor(color.hex);  // Set background color based on image\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }, []);\n\n  return (\n    <div className=\"music-card\" style={{ backgroundColor: bgColor }}>\n      <div className=\"album-art\" ref={imgRef}>\n        <img\n          src=\"path_to_clip_art_image.webp\"  // Path to your image\n          alt=\"clip art\"\n          style={{ display: 'none' }}  // Hide actual image since we are using it for background color extraction\n        />\n      </div>\n      <div className=\"progress-container\">\n        <progress value={progress} max=\"100\"></progress>\n      </div>\n      <div className=\"play-pause-button\" onClick={togglePlayPause}>\n        {isPlaying ? <FaPause /> : <FaPlay />}\n      </div>\n      <audio\n        ref={audioRef}\n        src=\"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3\"\n        onTimeUpdate={handleTimeUpdate}\n      ></audio>\n    </div>\n  );\n};\n\nexport default MusicPlayerCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}