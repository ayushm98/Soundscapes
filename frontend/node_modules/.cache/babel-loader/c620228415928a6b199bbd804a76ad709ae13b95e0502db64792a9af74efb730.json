{"ast":null,"code":"var _jsxFileName = \"/Users/ayush/Adev/soundscapes/frontend/src/components/MusicPlayerCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { FaPlay, FaPause } from \"react-icons/fa\";\nimport \"./MusicPlayerCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayerCard = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const audioRef = useRef(null);\n  const [lyrics, setLyrics] = useState(\"Please just look into my eyes...\"); // Example lyrics\n\n  const togglePlayPause = () => {\n    const audio = audioRef.current;\n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  useEffect(() => {\n    // Fetch lyrics from an API like Musixmatch here and update setLyrics accordingly\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music-player-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"album-art-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(\"../clip_art.jpeg\"),\n        className: \"album-art\",\n        alt: \"Clip Art\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"play-pause-button\",\n          onClick: togglePlayPause,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(FaPause, {\n            color: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(FaPlay, {\n            color: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lyrics-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lyrics-text\",\n        children: lyrics\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Paranoya\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Koorosh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicPlayerCard, \"/J2AbY34APD0H1yD7qUZ1gmr6UE=\");\n_c = MusicPlayerCard;\nexport default MusicPlayerCard;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayerCard\");","map":{"version":3,"names":["React","useState","useRef","useEffect","FaPlay","FaPause","jsxDEV","_jsxDEV","MusicPlayerCard","_s","isPlaying","setIsPlaying","audioRef","lyrics","setLyrics","togglePlayPause","audio","current","pause","play","className","children","src","require","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","color","ref","_c","$RefreshReg$"],"sources":["/Users/ayush/Adev/soundscapes/frontend/src/components/MusicPlayerCard.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { FaPlay, FaPause } from \"react-icons/fa\";\nimport \"./MusicPlayerCard.css\";\n\nconst MusicPlayerCard = () => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const audioRef = useRef(null);\n  const [lyrics, setLyrics] = useState(\"Please just look into my eyes...\"); // Example lyrics\n\n  const togglePlayPause = () => {\n    const audio = audioRef.current;\n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  useEffect(() => {\n    // Fetch lyrics from an API like Musixmatch here and update setLyrics accordingly\n  }, []);\n\n  return (\n    <div className=\"music-player-card\">\n      <div className=\"album-art-container\">\n        <img\n          src={require(\"../clip_art.jpeg\")}\n          className=\"album-art\"\n          alt=\"Clip Art\"\n        />\n        <div className=\"controls\">\n          <button className=\"play-pause-button\" onClick={togglePlayPause}>\n            {isPlaying ? <FaPause color=\"white\" /> : <FaPlay color=\"white\" />}\n          </button>\n        </div>\n      </div>\n      <div className=\"lyrics-container\">\n        <div className=\"lyrics-text\">{lyrics}</div>\n      </div>\n      <div className=\"song-info\">\n        <h3>Paranoya</h3>\n        <p>Koorosh</p>\n      </div>\n      <audio\n        ref={audioRef}\n        src=\"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3\"\n      ></audio>\n    </div>\n  );\n};\n\nexport default MusicPlayerCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}