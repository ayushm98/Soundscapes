{"ast":null,"code":"var _jsxFileName = \"/Users/ayush/Adev/soundscapes/frontend/src/components/MusicPlayerCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { FaPlay, FaPause } from \"react-icons/fa\";\nimport \"./MusicPlayerCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayerCard = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0); // New state for progress\n  const [lyrics, setLyrics] = useState(\"Please just look into my eyes...\"); // Example lyrics\n  const audioRef = useRef(null);\n  const togglePlayPause = () => {\n    const audio = audioRef.current;\n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const handleTimeUpdate = () => {\n    const audio = audioRef.current;\n    const progress = audio.currentTime / audio.duration * 100;\n    setProgress(progress);\n  };\n  useEffect(() => {\n    const audio = audioRef.current;\n    audio.addEventListener(\"timeupdate\", handleTimeUpdate);\n    return () => {\n      audio.removeEventListener(\"timeupdate\", handleTimeUpdate);\n    };\n  }, []);\n  useEffect(() => {\n    // Simulate lyric changes (you could use a lyrics API here)\n    const lyricTimer = setTimeout(() => {\n      setLyrics(\"And tell me what you feel...\");\n    }, 5000); // Update lyrics after 5 seconds\n\n    return () => clearTimeout(lyricTimer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music-player-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: require(\"../clip_art.jpeg\"),\n      className: \"album-art\",\n      alt: \"Clip Art\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"play-pause-button\",\n        onClick: togglePlayPause,\n        children: isPlaying ? /*#__PURE__*/_jsxDEV(FaPause, {\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(FaPlay, {\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lyrics-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lyrics-text\",\n        children: lyrics\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Paranoya\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Koorosh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        style: {\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicPlayerCard, \"uchU99vXpP6Z2F8acOAlqF6ZbQ4=\");\n_c = MusicPlayerCard;\nexport default MusicPlayerCard;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayerCard\");","map":{"version":3,"names":["React","useState","useRef","useEffect","FaPlay","FaPause","jsxDEV","_jsxDEV","MusicPlayerCard","_s","isPlaying","setIsPlaying","progress","setProgress","lyrics","setLyrics","audioRef","togglePlayPause","audio","current","pause","play","handleTimeUpdate","currentTime","duration","addEventListener","removeEventListener","lyricTimer","setTimeout","clearTimeout","className","children","src","require","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","color","style","width","ref","_c","$RefreshReg$"],"sources":["/Users/ayush/Adev/soundscapes/frontend/src/components/MusicPlayerCard.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { FaPlay, FaPause } from \"react-icons/fa\";\nimport \"./MusicPlayerCard.css\";\n\nconst MusicPlayerCard = () => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0); // New state for progress\n  const [lyrics, setLyrics] = useState(\"Please just look into my eyes...\"); // Example lyrics\n  const audioRef = useRef(null);\n\n  const togglePlayPause = () => {\n    const audio = audioRef.current;\n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  const handleTimeUpdate = () => {\n    const audio = audioRef.current;\n    const progress = (audio.currentTime / audio.duration) * 100;\n    setProgress(progress);\n  };\n\n  useEffect(() => {\n    const audio = audioRef.current;\n    audio.addEventListener(\"timeupdate\", handleTimeUpdate);\n    return () => {\n      audio.removeEventListener(\"timeupdate\", handleTimeUpdate);\n    };\n  }, []);\n\n  useEffect(() => {\n    // Simulate lyric changes (you could use a lyrics API here)\n    const lyricTimer = setTimeout(() => {\n      setLyrics(\"And tell me what you feel...\");\n    }, 5000); // Update lyrics after 5 seconds\n\n    return () => clearTimeout(lyricTimer);\n  }, []);\n\n  return (\n    <div className=\"music-player-card\">\n      \n        <img\n          src={require(\"../clip_art.jpeg\")}\n          className=\"album-art\"\n          alt=\"Clip Art\"\n        />\n        <div className=\"controls\">\n          <button className=\"play-pause-button\" onClick={togglePlayPause}>\n            {isPlaying ? <FaPause color=\"white\" /> : <FaPlay color=\"white\" />}\n          </button>\n        </div>\n     \n\n      {/* Lyrics */}\n      <div className=\"lyrics-container\">\n        <div className=\"lyrics-text\">{lyrics}</div>\n      </div>\n\n      {/* Song Info */}\n      <div className=\"song-info\">\n        <h3>Paranoya</h3>\n        <p>Koorosh</p>\n      </div>\n\n      {/* Progress Bar */}\n      <div className=\"progress-bar-container\">\n        <div className=\"progress-bar\" style={{ width: `${progress}%` }}></div>\n      </div>\n\n      <audio\n        ref={audioRef}\n        src=\"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3\"\n      ></audio>\n    </div>\n  );\n};\n\nexport default MusicPlayerCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}